#!/bin/bash
# Created by Joe Corso Armyglass@hotmail.com

module="Term"
description="Terminal Editor"
long_description=""
author="Author: Joe Corso (https://www.joecorso.com)"
created="Created: $(date -d '20250123 2036')"
version="0.0.1"
docs="Documentation: https://github.com/padsRepo"
license="MIT License"
OPTSTRING="v,h"
synopsis="Synopsis: term -[<module>] -[<argument>] -[<option>] [name...]"
syntax="Syntax: ${0##*/} -[${OPTSTRING}] -[arg]"
pads_dir="$(dirname "$(readlink -f "${0%/*}")")"

description(){
  cat << EOF
 * ${module}
 * ${description}
EOF
}

usage(){
  cat << EOF   
  $synopsis
  $syntax
  Usage:
    -S [-h] System Module
    -P [-h] Project Module
    -R [-h] Run Module
    -T [-h] Test Module
    -x      Set -x
    -v      Show Version
    -h      Show Usage

  Ex: pads -Pfs <flaskproject> | pads -Su nano neofetch firefox
  See also: man pads, info pads
  $author
  Version: $version
  $created
  $license
EOF
}

manual(){
  description
  usage
}

while getopts ${OPTSTRING} mod; do
  case ${mod} in
    x) set -$mod;;
    S)
      . "${pads_dir}/lib/bashville/system_manager.sh"
      exit
      ;;
    P)
      . "${pads_dir}/lib/bashville/project_manager.sh"
      parse_opts
      #logMsg "${success}" "${failure}"
      exit
      ;;
    R)
      . "${pads_dir}/lib/bashville/run_manager.sh"
      $arg $opt
      #logMsg "${success}" "${failure}"
      exit
      ;;
    T)
      echo T
      exit
      ;;
    v) echo "${version}"; exit;;
    h) usage; exit;;
    ?) echo " * pads -h for help"; exit 2;;
    *) echo "K18 Error"; exit 2;;
  esac
done
[[ $# -gt 0 ]] && echo -e "$0: illegal option -- $1\n$syntax" && exit 2
manual
